name: .NET Core Service CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-push:
    runs-on: windows-latest

    strategy:
      matrix:
        configuration: [ Debug, Release ]

    env:
      Solution_Name: KycAggregatorService.sln
      Image_Name: kycaggregatorservice

    steps:
      # 1Ô∏è‚É£ Checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2Ô∏è‚É£ Setup .NET 8
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # 3Ô∏è‚É£ Cache NuGet packages
      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            nuget-

      # 4Ô∏è‚É£ Restore dependencies
      - name: Restore
        run: dotnet restore ${{ env.Solution_Name }}

      # 5Ô∏è‚É£ Build
      - name: Build
        run: dotnet build ${{ env.Solution_Name }} --configuration ${{ matrix.configuration }} --no-restore

      # 6Ô∏è‚É£ Test (optional)
      - name: Test
        run: dotnet test ${{ env.Solution_Name }} --configuration ${{ matrix.configuration }} --no-build --verbosity normal

      # 7Ô∏è‚É£ Build Docker image
      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/${{ env.Image_Name }}:latest .
          docker tag ghcr.io/${{ github.repository_owner }}/${{ env.Image_Name }}:latest ghcr.io/${{ github.repository_owner }}/${{ env.Image_Name }}:${{ github.sha }}

      # 8Ô∏è‚É£ Log in to GHCR
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 9Ô∏è‚É£ Push Docker images (latest + commit SHA)
      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.Image_Name }}:latest
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.Image_Name }}:${{ github.sha }}

      # üîü Make GHCR image public via API
      - name: Make GHCR image public
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -s -X PATCH \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/user/packages/container/${{ env.Image_Name }}/visibility \
            -d '{"visibility":"public"}'
